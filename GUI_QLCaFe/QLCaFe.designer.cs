#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI_QLCaFe
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyCafe")]
	public partial class QLCaFeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertDetailBill(DetailBill instance);
    partial void UpdateDetailBill(DetailBill instance);
    partial void DeleteDetailBill(DetailBill instance);
    partial void InsertDetailStatistic(DetailStatistic instance);
    partial void UpdateDetailStatistic(DetailStatistic instance);
    partial void DeleteDetailStatistic(DetailStatistic instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    partial void InsertMaterial(Material instance);
    partial void UpdateMaterial(Material instance);
    partial void DeleteMaterial(Material instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertStatistic(Statistic instance);
    partial void UpdateStatistic(Statistic instance);
    partial void DeleteStatistic(Statistic instance);
    partial void InsertTableCf(TableCf instance);
    partial void UpdateTableCf(TableCf instance);
    partial void DeleteTableCf(TableCf instance);
    partial void InsertVoucher(Voucher instance);
    partial void UpdateVoucher(Voucher instance);
    partial void DeleteVoucher(Voucher instance);
    #endregion
		
		public QLCaFeDataContext() : 
				base(global::GUI_QLCaFe.Properties.Settings.Default.QuanLyCafeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLCaFeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLCaFeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLCaFeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLCaFeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<DetailBill> DetailBills
		{
			get
			{
				return this.GetTable<DetailBill>();
			}
		}
		
		public System.Data.Linq.Table<DetailStatistic> DetailStatistics
		{
			get
			{
				return this.GetTable<DetailStatistic>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<Material> Materials
		{
			get
			{
				return this.GetTable<Material>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menus
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Statistic> Statistics
		{
			get
			{
				return this.GetTable<Statistic>();
			}
		}
		
		public System.Data.Linq.Table<TableCf> TableCfs
		{
			get
			{
				return this.GetTable<TableCf>();
			}
		}
		
		public System.Data.Linq.Table<Voucher> Vouchers
		{
			get
			{
				return this.GetTable<Voucher>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBill;
		
		private System.Nullable<int> _IdTable;
		
		private System.Nullable<System.DateTime> _CheckIn;
		
		private string _IdVoucher;
		
		private string _IdPayment;
		
		private string _IdStaff;
		
		private EntitySet<DetailBill> _DetailBills;
		
		private EntityRef<Payment> _Payment;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<TableCf> _TableCf;
		
		private EntityRef<Voucher> _Voucher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBillChanging(int value);
    partial void OnIdBillChanged();
    partial void OnIdTableChanging(System.Nullable<int> value);
    partial void OnIdTableChanged();
    partial void OnCheckInChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckInChanged();
    partial void OnIdVoucherChanging(string value);
    partial void OnIdVoucherChanged();
    partial void OnIdPaymentChanging(string value);
    partial void OnIdPaymentChanged();
    partial void OnIdStaffChanging(string value);
    partial void OnIdStaffChanged();
    #endregion
		
		public Bill()
		{
			this._DetailBills = new EntitySet<DetailBill>(new Action<DetailBill>(this.attach_DetailBills), new Action<DetailBill>(this.detach_DetailBills));
			this._Payment = default(EntityRef<Payment>);
			this._Staff = default(EntityRef<Staff>);
			this._TableCf = default(EntityRef<TableCf>);
			this._Voucher = default(EntityRef<Voucher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBill", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdBill
		{
			get
			{
				return this._IdBill;
			}
			set
			{
				if ((this._IdBill != value))
				{
					this.OnIdBillChanging(value);
					this.SendPropertyChanging();
					this._IdBill = value;
					this.SendPropertyChanged("IdBill");
					this.OnIdBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTable", DbType="Int")]
		public System.Nullable<int> IdTable
		{
			get
			{
				return this._IdTable;
			}
			set
			{
				if ((this._IdTable != value))
				{
					if (this._TableCf.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTableChanging(value);
					this.SendPropertyChanging();
					this._IdTable = value;
					this.SendPropertyChanged("IdTable");
					this.OnIdTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckIn
		{
			get
			{
				return this._CheckIn;
			}
			set
			{
				if ((this._CheckIn != value))
				{
					this.OnCheckInChanging(value);
					this.SendPropertyChanging();
					this._CheckIn = value;
					this.SendPropertyChanged("CheckIn");
					this.OnCheckInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVoucher", DbType="NVarChar(10)")]
		public string IdVoucher
		{
			get
			{
				return this._IdVoucher;
			}
			set
			{
				if ((this._IdVoucher != value))
				{
					if (this._Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVoucherChanging(value);
					this.SendPropertyChanging();
					this._IdVoucher = value;
					this.SendPropertyChanged("IdVoucher");
					this.OnIdVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPayment", DbType="VarChar(10)")]
		public string IdPayment
		{
			get
			{
				return this._IdPayment;
			}
			set
			{
				if ((this._IdPayment != value))
				{
					if (this._Payment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPaymentChanging(value);
					this.SendPropertyChanging();
					this._IdPayment = value;
					this.SendPropertyChanged("IdPayment");
					this.OnIdPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="NVarChar(5)")]
		public string IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStaffChanging(value);
					this.SendPropertyChanging();
					this._IdStaff = value;
					this.SendPropertyChanged("IdStaff");
					this.OnIdStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_DetailBill", Storage="_DetailBills", ThisKey="IdBill", OtherKey="IdBill")]
		public EntitySet<DetailBill> DetailBills
		{
			get
			{
				return this._DetailBills;
			}
			set
			{
				this._DetailBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Bill", Storage="_Payment", ThisKey="IdPayment", OtherKey="IdPayment", IsForeignKey=true)]
		public Payment Payment
		{
			get
			{
				return this._Payment.Entity;
			}
			set
			{
				Payment previousValue = this._Payment.Entity;
				if (((previousValue != value) 
							|| (this._Payment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Payment.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._IdPayment = value.IdPayment;
					}
					else
					{
						this._IdPayment = default(string);
					}
					this.SendPropertyChanged("Payment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Bill", Storage="_Staff", ThisKey="IdStaff", OtherKey="IdStaff", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._IdStaff = value.IdStaff;
					}
					else
					{
						this._IdStaff = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableCf_Bill", Storage="_TableCf", ThisKey="IdTable", OtherKey="IdTable", IsForeignKey=true)]
		public TableCf TableCf
		{
			get
			{
				return this._TableCf.Entity;
			}
			set
			{
				TableCf previousValue = this._TableCf.Entity;
				if (((previousValue != value) 
							|| (this._TableCf.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableCf.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._TableCf.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._IdTable = value.IdTable;
					}
					else
					{
						this._IdTable = default(Nullable<int>);
					}
					this.SendPropertyChanged("TableCf");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_Bill", Storage="_Voucher", ThisKey="IdVoucher", OtherKey="IdVoucher", IsForeignKey=true)]
		public Voucher Voucher
		{
			get
			{
				return this._Voucher.Entity;
			}
			set
			{
				Voucher previousValue = this._Voucher.Entity;
				if (((previousValue != value) 
							|| (this._Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Voucher.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Voucher.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._IdVoucher = value.IdVoucher;
					}
					else
					{
						this._IdVoucher = default(string);
					}
					this.SendPropertyChanged("Voucher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailBills(DetailBill entity)
		{
			this.SendPropertyChanging();
			entity.Bill = this;
		}
		
		private void detach_DetailBills(DetailBill entity)
		{
			this.SendPropertyChanging();
			entity.Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDCategory;
		
		private string _NameCategory;
		
		private EntitySet<Menu> _Menus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCategoryChanging(string value);
    partial void OnIDCategoryChanged();
    partial void OnNameCategoryChanging(string value);
    partial void OnNameCategoryChanged();
    #endregion
		
		public Category()
		{
			this._Menus = new EntitySet<Menu>(new Action<Menu>(this.attach_Menus), new Action<Menu>(this.detach_Menus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDCategory
		{
			get
			{
				return this._IDCategory;
			}
			set
			{
				if ((this._IDCategory != value))
				{
					this.OnIDCategoryChanging(value);
					this.SendPropertyChanging();
					this._IDCategory = value;
					this.SendPropertyChanged("IDCategory");
					this.OnIDCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCategory", DbType="NVarChar(50)")]
		public string NameCategory
		{
			get
			{
				return this._NameCategory;
			}
			set
			{
				if ((this._NameCategory != value))
				{
					this.OnNameCategoryChanging(value);
					this.SendPropertyChanging();
					this._NameCategory = value;
					this.SendPropertyChanged("NameCategory");
					this.OnNameCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Menu", Storage="_Menus", ThisKey="IDCategory", OtherKey="CategoryID")]
		public EntitySet<Menu> Menus
		{
			get
			{
				return this._Menus;
			}
			set
			{
				this._Menus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailBill")]
	public partial class DetailBill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDetailBill;
		
		private System.Nullable<int> _IdBill;
		
		private System.Nullable<int> _IdMenu;
		
		private System.Nullable<int> _Amount;
		
		private System.Nullable<double> _Price;
		
		private System.Nullable<double> _TotalPrice;
		
		private string _Note;
		
		private EntityRef<Bill> _Bill;
		
		private EntityRef<Menu> _Menu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDetailBillChanging(int value);
    partial void OnIdDetailBillChanged();
    partial void OnIdBillChanging(System.Nullable<int> value);
    partial void OnIdBillChanged();
    partial void OnIdMenuChanging(System.Nullable<int> value);
    partial void OnIdMenuChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnTotalPriceChanging(System.Nullable<double> value);
    partial void OnTotalPriceChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public DetailBill()
		{
			this._Bill = default(EntityRef<Bill>);
			this._Menu = default(EntityRef<Menu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDetailBill", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDetailBill
		{
			get
			{
				return this._IdDetailBill;
			}
			set
			{
				if ((this._IdDetailBill != value))
				{
					this.OnIdDetailBillChanging(value);
					this.SendPropertyChanging();
					this._IdDetailBill = value;
					this.SendPropertyChanged("IdDetailBill");
					this.OnIdDetailBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBill", DbType="Int")]
		public System.Nullable<int> IdBill
		{
			get
			{
				return this._IdBill;
			}
			set
			{
				if ((this._IdBill != value))
				{
					if (this._Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBillChanging(value);
					this.SendPropertyChanging();
					this._IdBill = value;
					this.SendPropertyChanged("IdBill");
					this.OnIdBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMenu", DbType="Int")]
		public System.Nullable<int> IdMenu
		{
			get
			{
				return this._IdMenu;
			}
			set
			{
				if ((this._IdMenu != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMenuChanging(value);
					this.SendPropertyChanging();
					this._IdMenu = value;
					this.SendPropertyChanged("IdMenu");
					this.OnIdMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float")]
		public System.Nullable<double> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(100)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_DetailBill", Storage="_Bill", ThisKey="IdBill", OtherKey="IdBill", IsForeignKey=true)]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.DetailBills.Remove(this);
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.DetailBills.Add(this);
						this._IdBill = value.IdBill;
					}
					else
					{
						this._IdBill = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_DetailBill", Storage="_Menu", ThisKey="IdMenu", OtherKey="IdMenu", IsForeignKey=true)]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.DetailBills.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.DetailBills.Add(this);
						this._IdMenu = value.IdMenu;
					}
					else
					{
						this._IdMenu = default(Nullable<int>);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailStatistic")]
	public partial class DetailStatistic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDetailStatistic;
		
		private System.Nullable<int> _IdStatistic;
		
		private string _NameMenu;
		
		private System.Nullable<int> _Amount;
		
		private System.Nullable<double> _Price;
		
		private System.Nullable<double> _TotalPrice;
		
		private string _Note;
		
		private EntityRef<Statistic> _Statistic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDetailStatisticChanging(int value);
    partial void OnIdDetailStatisticChanged();
    partial void OnIdStatisticChanging(System.Nullable<int> value);
    partial void OnIdStatisticChanged();
    partial void OnNameMenuChanging(string value);
    partial void OnNameMenuChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnTotalPriceChanging(System.Nullable<double> value);
    partial void OnTotalPriceChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public DetailStatistic()
		{
			this._Statistic = default(EntityRef<Statistic>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDetailStatistic", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDetailStatistic
		{
			get
			{
				return this._IdDetailStatistic;
			}
			set
			{
				if ((this._IdDetailStatistic != value))
				{
					this.OnIdDetailStatisticChanging(value);
					this.SendPropertyChanging();
					this._IdDetailStatistic = value;
					this.SendPropertyChanged("IdDetailStatistic");
					this.OnIdDetailStatisticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStatistic", DbType="Int")]
		public System.Nullable<int> IdStatistic
		{
			get
			{
				return this._IdStatistic;
			}
			set
			{
				if ((this._IdStatistic != value))
				{
					if (this._Statistic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStatisticChanging(value);
					this.SendPropertyChanging();
					this._IdStatistic = value;
					this.SendPropertyChanged("IdStatistic");
					this.OnIdStatisticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameMenu", DbType="NVarChar(100)")]
		public string NameMenu
		{
			get
			{
				return this._NameMenu;
			}
			set
			{
				if ((this._NameMenu != value))
				{
					this.OnNameMenuChanging(value);
					this.SendPropertyChanging();
					this._NameMenu = value;
					this.SendPropertyChanged("NameMenu");
					this.OnNameMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float")]
		public System.Nullable<double> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(100)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Statistic_DetailStatistic", Storage="_Statistic", ThisKey="IdStatistic", OtherKey="IdStatistic", IsForeignKey=true)]
		public Statistic Statistic
		{
			get
			{
				return this._Statistic.Entity;
			}
			set
			{
				Statistic previousValue = this._Statistic.Entity;
				if (((previousValue != value) 
							|| (this._Statistic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Statistic.Entity = null;
						previousValue.DetailStatistics.Remove(this);
					}
					this._Statistic.Entity = value;
					if ((value != null))
					{
						value.DetailStatistics.Add(this);
						this._IdStatistic = value.IdStatistic;
					}
					else
					{
						this._IdStatistic = default(Nullable<int>);
					}
					this.SendPropertyChanged("Statistic");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log]")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _IdStaff;
		
		private string _Action;
		
		private string _Object;
		
		private string _IdObject;
		
		private System.Nullable<System.DateTime> _DateStart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIdStaffChanging(string value);
    partial void OnIdStaffChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnObjectChanging(string value);
    partial void OnObjectChanged();
    partial void OnIdObjectChanging(string value);
    partial void OnIdObjectChanged();
    partial void OnDateStartChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStartChanged();
    #endregion
		
		public Log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="NVarChar(5)")]
		public string IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					this.OnIdStaffChanging(value);
					this.SendPropertyChanging();
					this._IdStaff = value;
					this.SendPropertyChanged("IdStaff");
					this.OnIdStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(30)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object", DbType="NVarChar(20)")]
		public string Object
		{
			get
			{
				return this._Object;
			}
			set
			{
				if ((this._Object != value))
				{
					this.OnObjectChanging(value);
					this.SendPropertyChanging();
					this._Object = value;
					this.SendPropertyChanged("Object");
					this.OnObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdObject", DbType="NVarChar(20)")]
		public string IdObject
		{
			get
			{
				return this._IdObject;
			}
			set
			{
				if ((this._IdObject != value))
				{
					this.OnIdObjectChanging(value);
					this.SendPropertyChanging();
					this._IdObject = value;
					this.SendPropertyChanged("IdObject");
					this.OnIdObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Material")]
	public partial class Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdMaterial;
		
		private string _NameMaterial;
		
		private System.Nullable<int> _Amount;
		
		private string _Type;
		
		private string _Status;
		
		private string _Producer;
		
		private System.Nullable<double> _ImportPrice;
		
		private System.Nullable<System.DateTime> _ImportDate;
		
		private string _Picture;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMaterialChanging(string value);
    partial void OnIdMaterialChanged();
    partial void OnNameMaterialChanging(string value);
    partial void OnNameMaterialChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnProducerChanging(string value);
    partial void OnProducerChanged();
    partial void OnImportPriceChanging(System.Nullable<double> value);
    partial void OnImportPriceChanged();
    partial void OnImportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportDateChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    #endregion
		
		public Material()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMaterial", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdMaterial
		{
			get
			{
				return this._IdMaterial;
			}
			set
			{
				if ((this._IdMaterial != value))
				{
					this.OnIdMaterialChanging(value);
					this.SendPropertyChanging();
					this._IdMaterial = value;
					this.SendPropertyChanged("IdMaterial");
					this.OnIdMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameMaterial", DbType="NVarChar(100)")]
		public string NameMaterial
		{
			get
			{
				return this._NameMaterial;
			}
			set
			{
				if ((this._NameMaterial != value))
				{
					this.OnNameMaterialChanging(value);
					this.SendPropertyChanging();
					this._NameMaterial = value;
					this.SendPropertyChanged("NameMaterial");
					this.OnNameMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(10)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Producer", DbType="NVarChar(50)")]
		public string Producer
		{
			get
			{
				return this._Producer;
			}
			set
			{
				if ((this._Producer != value))
				{
					this.OnProducerChanging(value);
					this.SendPropertyChanging();
					this._Producer = value;
					this.SendPropertyChanged("Producer");
					this.OnProducerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPrice", DbType="Float")]
		public System.Nullable<double> ImportPrice
		{
			get
			{
				return this._ImportPrice;
			}
			set
			{
				if ((this._ImportPrice != value))
				{
					this.OnImportPriceChanging(value);
					this.SendPropertyChanging();
					this._ImportPrice = value;
					this.SendPropertyChanged("ImportPrice");
					this.OnImportPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportDate", DbType="Date")]
		public System.Nullable<System.DateTime> ImportDate
		{
			get
			{
				return this._ImportDate;
			}
			set
			{
				if ((this._ImportDate != value))
				{
					this.OnImportDateChanging(value);
					this.SendPropertyChanging();
					this._ImportDate = value;
					this.SendPropertyChanged("ImportDate");
					this.OnImportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="VarChar(150)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMenu;
		
		private string _Name;
		
		private System.Nullable<double> _Price;
		
		private string _CategoryID;
		
		private string _Picture;
		
		private EntitySet<DetailBill> _DetailBills;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMenuChanging(int value);
    partial void OnIdMenuChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnCategoryIDChanging(string value);
    partial void OnCategoryIDChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    #endregion
		
		public Menu()
		{
			this._DetailBills = new EntitySet<DetailBill>(new Action<DetailBill>(this.attach_DetailBills), new Action<DetailBill>(this.detach_DetailBills));
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMenu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdMenu
		{
			get
			{
				return this._IdMenu;
			}
			set
			{
				if ((this._IdMenu != value))
				{
					this.OnIdMenuChanging(value);
					this.SendPropertyChanging();
					this._IdMenu = value;
					this.SendPropertyChanged("IdMenu");
					this.OnIdMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="VarChar(10)")]
		public string CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="VarChar(150)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_DetailBill", Storage="_DetailBills", ThisKey="IdMenu", OtherKey="IdMenu")]
		public EntitySet<DetailBill> DetailBills
		{
			get
			{
				return this._DetailBills;
			}
			set
			{
				this._DetailBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Menu", Storage="_Category", ThisKey="CategoryID", OtherKey="IDCategory", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Menus.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Menus.Add(this);
						this._CategoryID = value.IDCategory;
					}
					else
					{
						this._CategoryID = default(string);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailBills(DetailBill entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_DetailBills(DetailBill entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdPayment;
		
		private string _Method;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPaymentChanging(string value);
    partial void OnIdPaymentChanged();
    partial void OnMethodChanging(string value);
    partial void OnMethodChanged();
    #endregion
		
		public Payment()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPayment", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdPayment
		{
			get
			{
				return this._IdPayment;
			}
			set
			{
				if ((this._IdPayment != value))
				{
					this.OnIdPaymentChanging(value);
					this.SendPropertyChanging();
					this._IdPayment = value;
					this.SendPropertyChanged("IdPayment");
					this.OnIdPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Method", DbType="NVarChar(50)")]
		public string Method
		{
			get
			{
				return this._Method;
			}
			set
			{
				if ((this._Method != value))
				{
					this.OnMethodChanging(value);
					this.SendPropertyChanging();
					this._Method = value;
					this.SendPropertyChanged("Method");
					this.OnMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Bill", Storage="_Bills", ThisKey="IdPayment", OtherKey="IdPayment")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Payment = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Payment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdStaff;
		
		private string _NameStaff;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _Gender;
		
		private System.DateTime _BirthDay;
		
		private string _Role;
		
		private string _Password;
		
		private string _Picture;
		
		private System.Nullable<bool> _IsDelete;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdStaffChanging(string value);
    partial void OnIdStaffChanged();
    partial void OnNameStaffChanging(string value);
    partial void OnNameStaffChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnBirthDayChanging(System.DateTime value);
    partial void OnBirthDayChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public Staff()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStaff", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdStaff
		{
			get
			{
				return this._IdStaff;
			}
			set
			{
				if ((this._IdStaff != value))
				{
					this.OnIdStaffChanging(value);
					this.SendPropertyChanging();
					this._IdStaff = value;
					this.SendPropertyChanged("IdStaff");
					this.OnIdStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameStaff", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NameStaff
		{
			get
			{
				return this._NameStaff;
			}
			set
			{
				if ((this._NameStaff != value))
				{
					this.OnNameStaffChanging(value);
					this.SendPropertyChanging();
					this._NameStaff = value;
					this.SendPropertyChanged("NameStaff");
					this.OnNameStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(11) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="Date NOT NULL")]
		public System.DateTime BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
		public System.Nullable<bool> IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Bill", Storage="_Bills", ThisKey="IdStaff", OtherKey="IdStaff")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Statistic")]
	public partial class Statistic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdStatistic;
		
		private System.Nullable<int> _IdBill;
		
		private System.Nullable<double> _PercentVoucher;
		
		private System.Nullable<double> _PercentVAT;
		
		private System.Nullable<double> _Total;
		
		private string _Shift;
		
		private string _NameStaff;
		
		private System.Nullable<System.DateTime> _CheckIn;
		
		private System.Nullable<System.DateTime> _CheckOut;
		
		private string _Method;
		
		private string _NameTable;
		
		private EntitySet<DetailStatistic> _DetailStatistics;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdStatisticChanging(int value);
    partial void OnIdStatisticChanged();
    partial void OnIdBillChanging(System.Nullable<int> value);
    partial void OnIdBillChanged();
    partial void OnPercentVoucherChanging(System.Nullable<double> value);
    partial void OnPercentVoucherChanged();
    partial void OnPercentVATChanging(System.Nullable<double> value);
    partial void OnPercentVATChanged();
    partial void OnTotalChanging(System.Nullable<double> value);
    partial void OnTotalChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnNameStaffChanging(string value);
    partial void OnNameStaffChanged();
    partial void OnCheckInChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckInChanged();
    partial void OnCheckOutChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckOutChanged();
    partial void OnMethodChanging(string value);
    partial void OnMethodChanged();
    partial void OnNameTableChanging(string value);
    partial void OnNameTableChanged();
    #endregion
		
		public Statistic()
		{
			this._DetailStatistics = new EntitySet<DetailStatistic>(new Action<DetailStatistic>(this.attach_DetailStatistics), new Action<DetailStatistic>(this.detach_DetailStatistics));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStatistic", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdStatistic
		{
			get
			{
				return this._IdStatistic;
			}
			set
			{
				if ((this._IdStatistic != value))
				{
					this.OnIdStatisticChanging(value);
					this.SendPropertyChanging();
					this._IdStatistic = value;
					this.SendPropertyChanged("IdStatistic");
					this.OnIdStatisticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBill", DbType="Int")]
		public System.Nullable<int> IdBill
		{
			get
			{
				return this._IdBill;
			}
			set
			{
				if ((this._IdBill != value))
				{
					this.OnIdBillChanging(value);
					this.SendPropertyChanging();
					this._IdBill = value;
					this.SendPropertyChanged("IdBill");
					this.OnIdBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentVoucher", DbType="Float")]
		public System.Nullable<double> PercentVoucher
		{
			get
			{
				return this._PercentVoucher;
			}
			set
			{
				if ((this._PercentVoucher != value))
				{
					this.OnPercentVoucherChanging(value);
					this.SendPropertyChanging();
					this._PercentVoucher = value;
					this.SendPropertyChanged("PercentVoucher");
					this.OnPercentVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentVAT", DbType="Float")]
		public System.Nullable<double> PercentVAT
		{
			get
			{
				return this._PercentVAT;
			}
			set
			{
				if ((this._PercentVAT != value))
				{
					this.OnPercentVATChanging(value);
					this.SendPropertyChanging();
					this._PercentVAT = value;
					this.SendPropertyChanged("PercentVAT");
					this.OnPercentVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float")]
		public System.Nullable<double> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="NVarChar(10)")]
		public string Shift
		{
			get
			{
				return this._Shift;
			}
			set
			{
				if ((this._Shift != value))
				{
					this.OnShiftChanging(value);
					this.SendPropertyChanging();
					this._Shift = value;
					this.SendPropertyChanged("Shift");
					this.OnShiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameStaff", DbType="NVarChar(50)")]
		public string NameStaff
		{
			get
			{
				return this._NameStaff;
			}
			set
			{
				if ((this._NameStaff != value))
				{
					this.OnNameStaffChanging(value);
					this.SendPropertyChanging();
					this._NameStaff = value;
					this.SendPropertyChanged("NameStaff");
					this.OnNameStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckIn
		{
			get
			{
				return this._CheckIn;
			}
			set
			{
				if ((this._CheckIn != value))
				{
					this.OnCheckInChanging(value);
					this.SendPropertyChanging();
					this._CheckIn = value;
					this.SendPropertyChanged("CheckIn");
					this.OnCheckInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOut", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckOut
		{
			get
			{
				return this._CheckOut;
			}
			set
			{
				if ((this._CheckOut != value))
				{
					this.OnCheckOutChanging(value);
					this.SendPropertyChanging();
					this._CheckOut = value;
					this.SendPropertyChanged("CheckOut");
					this.OnCheckOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Method", DbType="NVarChar(50)")]
		public string Method
		{
			get
			{
				return this._Method;
			}
			set
			{
				if ((this._Method != value))
				{
					this.OnMethodChanging(value);
					this.SendPropertyChanging();
					this._Method = value;
					this.SendPropertyChanged("Method");
					this.OnMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTable", DbType="NVarChar(10)")]
		public string NameTable
		{
			get
			{
				return this._NameTable;
			}
			set
			{
				if ((this._NameTable != value))
				{
					this.OnNameTableChanging(value);
					this.SendPropertyChanging();
					this._NameTable = value;
					this.SendPropertyChanged("NameTable");
					this.OnNameTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Statistic_DetailStatistic", Storage="_DetailStatistics", ThisKey="IdStatistic", OtherKey="IdStatistic")]
		public EntitySet<DetailStatistic> DetailStatistics
		{
			get
			{
				return this._DetailStatistics;
			}
			set
			{
				this._DetailStatistics.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailStatistics(DetailStatistic entity)
		{
			this.SendPropertyChanging();
			entity.Statistic = this;
		}
		
		private void detach_DetailStatistics(DetailStatistic entity)
		{
			this.SendPropertyChanging();
			entity.Statistic = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableCf")]
	public partial class TableCf : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTable;
		
		private string _NameTable;
		
		private string _Status;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTableChanging(int value);
    partial void OnIdTableChanged();
    partial void OnNameTableChanging(string value);
    partial void OnNameTableChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public TableCf()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTable", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdTable
		{
			get
			{
				return this._IdTable;
			}
			set
			{
				if ((this._IdTable != value))
				{
					this.OnIdTableChanging(value);
					this.SendPropertyChanging();
					this._IdTable = value;
					this.SendPropertyChanged("IdTable");
					this.OnIdTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTable", DbType="NVarChar(10)")]
		public string NameTable
		{
			get
			{
				return this._NameTable;
			}
			set
			{
				if ((this._NameTable != value))
				{
					this.OnNameTableChanging(value);
					this.SendPropertyChanging();
					this._NameTable = value;
					this.SendPropertyChanged("NameTable");
					this.OnNameTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(10)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableCf_Bill", Storage="_Bills", ThisKey="IdTable", OtherKey="IdTable")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.TableCf = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.TableCf = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Voucher")]
	public partial class Voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdVoucher;
		
		private string _NameVoucher;
		
		private double _PercentVoucher;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVoucherChanging(string value);
    partial void OnIdVoucherChanged();
    partial void OnNameVoucherChanging(string value);
    partial void OnNameVoucherChanged();
    partial void OnPercentVoucherChanging(double value);
    partial void OnPercentVoucherChanged();
    #endregion
		
		public Voucher()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVoucher", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdVoucher
		{
			get
			{
				return this._IdVoucher;
			}
			set
			{
				if ((this._IdVoucher != value))
				{
					this.OnIdVoucherChanging(value);
					this.SendPropertyChanging();
					this._IdVoucher = value;
					this.SendPropertyChanged("IdVoucher");
					this.OnIdVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameVoucher", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NameVoucher
		{
			get
			{
				return this._NameVoucher;
			}
			set
			{
				if ((this._NameVoucher != value))
				{
					this.OnNameVoucherChanging(value);
					this.SendPropertyChanging();
					this._NameVoucher = value;
					this.SendPropertyChanged("NameVoucher");
					this.OnNameVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentVoucher", DbType="Float NOT NULL")]
		public double PercentVoucher
		{
			get
			{
				return this._PercentVoucher;
			}
			set
			{
				if ((this._PercentVoucher != value))
				{
					this.OnPercentVoucherChanging(value);
					this.SendPropertyChanging();
					this._PercentVoucher = value;
					this.SendPropertyChanged("PercentVoucher");
					this.OnPercentVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voucher_Bill", Storage="_Bills", ThisKey="IdVoucher", OtherKey="IdVoucher")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Voucher = null;
		}
	}
}
#pragma warning restore 1591
